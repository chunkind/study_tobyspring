<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<!-- mysql -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url"  value="jdbc:mysql://localhost/springbook" />
		<property name="username"  value="spring" />
		<property name="password"  value="book" />
	</bean> -->
	<!-- oracle -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"  value="jdbc:oracle:thin:@127.0.0.1:1521:orcl" />
		<property name="username"  value="spring" />
		<property name="password"  value="book" />
	</bean>
	
	<bean id="mailSender" class="springbook.user.service.DummyMailSender" />
	
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- old -->
	<!-- <bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref ="userServiceImpl" />
		<property name="interceptorNames">
			<list>
				<value>transactionAdvisor</value>
			</list>
		</property>
	</bean> -->
	<!-- new -->
	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<!-- new : parent="userService" -> 프로퍼티 정의를 포함해서 userService 빈의 설정을 상속받는다. -->
	<bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserServiceImpl" parent="userService" />
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactioinAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean>
	
	<bean id="transactioinAdvice" class="springbook.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<!-- old -->
	<!-- <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="upgrade*" />
	</bean> -->
	<!-- new -->
	<bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut">
		<!-- 클래스 이름 패턴 -->
		<property name="mappedClassName" value="*ServiceImpl" />
		<!-- 메소드 이름 패턴 -->
		<property name="mappedName" value="upgrade*" />
	</bean>
	
	<!-- new : 어드바이저를 이용하는 자동 프록시 생성기 등록 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
</beans>



















